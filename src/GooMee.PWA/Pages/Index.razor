@page "/"

@if (_isClipboardApiSupported)
{
	<section class="guid-display-container">
	 <div class="guid-display-area " @onclick=@OnGuidRequestAsync onselectstart="return false">
		<span>@_guidDisplayText</span>
	 </div>
	</section>
}
else
{
	<p>@_clipboardApiNotSupportedDisplayText</p>
}

@code
{
	private bool _isClipboardApiSupported;
	private string? _clipboardApiNotSupportedDisplayText;
	private string? _guidDisplayText;
	private IJSObjectReference? _clipboardJsModule;

	[Inject]
	private IJSRuntime Js { get; set; } = null!;

	protected override async Task OnInitializedAsync()
	{
		_clipboardJsModule = await Js.InvokeAsync<IJSObjectReference>("import", "./js/clipboard.js");
		_isClipboardApiSupported = await _clipboardJsModule!.InvokeAsync<bool>("isClipboardApiSupported");

		if (_isClipboardApiSupported)
		{
			_guidDisplayText = "Tap to generate guid...";
		}
		else
		{
			_clipboardApiNotSupportedDisplayText = "Clipboard API not supported... Upgrade your browser.";
		}
	}

	protected async Task OnGuidRequestAsync()
	{
		_guidDisplayText = Guid.NewGuid().ToString();
		await _clipboardJsModule!.InvokeVoidAsync("writeToClipboard", _guidDisplayText);
	}
}