@page "/"

<section class="guid-display-container" tabindex="0"
		 @ref="@_guidContainerElement"
		 @onkeydown="@HandleKeyDownAsync"
		 @onclick=@HandleGuidRequestAsync>

	<div class="guid-display-area">
		<span onselectstart="return false">@(_guidDisplayText ?? "Tap screen or press g")</span>
	</div>

</section>

@code
{
	private bool _isClipboardApiSupported;
	private string? _guidDisplayText;
	private IJSObjectReference? _clipboardJsModule;
	private ElementReference _guidContainerElement;

	[Inject]
	private IJSRuntime Js { get; set; } = null!;

	protected override async Task OnInitializedAsync()
	{
		_clipboardJsModule = await Js.InvokeAsync<IJSObjectReference>("import", "./js/clipboard.js");
		_isClipboardApiSupported = await _clipboardJsModule!.InvokeAsync<bool>("isClipboardApiSupported");
	}

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{
			await _guidContainerElement.FocusAsync();
		}
	}

	private async Task HandleGuidRequestAsync()
	{
		_guidDisplayText = Guid.NewGuid().ToString();

		if (_isClipboardApiSupported)
		{
			await _clipboardJsModule!.InvokeVoidAsync("writeToClipboard", _guidDisplayText);
		}
	}

	private async Task HandleKeyDownAsync(KeyboardEventArgs arg)
	{
		if (arg.Key.Equals("G", StringComparison.OrdinalIgnoreCase))
		{
			await HandleGuidRequestAsync();
		}
	}
}